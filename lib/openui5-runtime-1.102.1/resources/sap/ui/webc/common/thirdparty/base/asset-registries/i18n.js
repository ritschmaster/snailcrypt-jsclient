sap.ui.define(["exports","../locale/getLocale","../locale/languageChange","../locale/normalizeLocale","../locale/nextFallbackLocale","../generated/AssetParameters","../config/Language"],function(e,t,n,s,o,a,r){"use strict";const c=new Set;const i=new Set;const l=new Map;const g=new Map;const u=new Map;const d=(e,t,n)=>{const s=`${e}/${t}`;u.set(s,n)};const m=(e,t)=>{l.set(e,t)};const h=e=>l.get(e);const f=(e,t)=>{throw new Error("This method has been removed. Use `registerI18nLoader` instead.")};const L=(e,t)=>{const n=`${e}/${t}`;return u.has(n)};const p=(e,t)=>{const n=`${e}/${t}`;const s=u.get(n);if(!g.get(n)){g.set(n,s(t))}return g.get(n)};const w=e=>{if(!c.has(e)){console.warn(`[${e}]: Message bundle assets are not configured. Falling back to English texts.`,` Add \`import "${e}/dist/Assets.js"\` in your bundle and make sure your build tool supports dynamic imports and JSON imports. See section "Assets" in the documentation for more information.`);c.add(e)}};const A=async e=>{const n=t().getLanguage();const c=t().getRegion();let l=s(n+(c?`-${c}`:``));while(l!==a.DEFAULT_LANGUAGE&&!L(e,l)){l=o(l)}const g=r.getFetchDefaultLanguage();if(l===a.DEFAULT_LANGUAGE&&!g){m(e,null);return}if(!L(e,l)){w(e);return}try{const t=await p(e,l);m(e,t)}catch(e){if(!i.has(e.message)){i.add(e.message);console.error(e.message)}}};n.attachLanguageChange(()=>{const e=[...l.keys()];return Promise.all(e.map(A))});e.fetchI18nBundle=A;e.getI18nBundleData=h;e.registerI18nBundle=f;e.registerI18nLoader=d;Object.defineProperty(e,"__esModule",{value:true})});