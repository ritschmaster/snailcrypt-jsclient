sap.ui.define(["./types/DataType","./util/isDescendantOf","./util/StringHelper","./util/SlotsHelper","./CustomElementsScopeUtils"],function(t,e,r,a,i){"use strict";class s{constructor(t){this.metadata=t}getInitialState(){if(Object.prototype.hasOwnProperty.call(this,"_initialState")){return this._initialState}const t={};const e=this.slotsAreManaged();const r=this.getProperties();for(const e in r){const a=r[e].type;const i=r[e].defaultValue;if(a===Boolean){t[e]=false;if(i!==undefined){console.warn("The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default")}}else if(r[e].multiple){t[e]=[]}else if(a===Object){t[e]="defaultValue"in r[e]?r[e].defaultValue:{}}else if(a===String){t[e]="defaultValue"in r[e]?r[e].defaultValue:""}else{t[e]=i}}if(e){const e=this.getSlots();for(const[r,a]of Object.entries(e)){const e=a.propertyName||r;t[e]=[]}}this._initialState=t;return t}static validatePropertyValue(t,e){const r=e.multiple;if(r){return t.map(t=>n(t,e))}return n(t,e)}static validateSlotValue(t,e){return o(t,e)}getPureTag(){return this.metadata.tag}getTag(){const t=this.metadata.tag;const e=i.getEffectiveScopingSuffixForTag(t);if(!e){return t}return`${t}-${e}`}getAltTag(){const t=this.metadata.altTag;if(!t){return}const e=i.getEffectiveScopingSuffixForTag(t);if(!e){return t}return`${t}-${e}`}hasAttribute(t){const e=this.getProperties()[t];return e.type!==Object&&!e.noAttribute&&!e.multiple}getPropertiesList(){return Object.keys(this.getProperties())}getAttributesList(){return this.getPropertiesList().filter(this.hasAttribute,this).map(r.camelToKebabCase)}getSlots(){return this.metadata.slots||{}}canSlotText(){const t=this.getSlots().default;return t&&t.type===Node}hasSlots(){return!!Object.entries(this.getSlots()).length}hasIndividualSlots(){return this.slotsAreManaged()&&Object.entries(this.getSlots()).some(([t,e])=>e.individualSlots)}slotsAreManaged(){return!!this.metadata.managedSlots}supportsF6FastNavigation(){return!!this.metadata.fastNavigation}getProperties(){return this.metadata.properties||{}}getEvents(){return this.metadata.events||{}}isLanguageAware(){return!!this.metadata.languageAware}isThemeAware(){return!!this.metadata.themeAware}shouldInvalidateOnChildChange(t,e,r){const a=this.getSlots()[t].invalidateOnChildChange;if(a===undefined){return false}if(typeof a==="boolean"){return a}if(typeof a==="object"){if(e==="property"){if(a.properties===undefined){return false}if(typeof a.properties==="boolean"){return a.properties}if(Array.isArray(a.properties)){return a.properties.includes(r)}throw new Error("Wrong format for invalidateOnChildChange.properties: boolean or array is expected")}if(e==="slot"){if(a.slots===undefined){return false}if(typeof a.slots==="boolean"){return a.slots}if(Array.isArray(a.slots)){return a.slots.includes(r)}throw new Error("Wrong format for invalidateOnChildChange.slots: boolean or array is expected")}}throw new Error("Wrong format for invalidateOnChildChange: boolean or object is expected")}}const n=(r,a)=>{const i=a.type;if(i===Boolean){return typeof r==="boolean"?r:false}if(i===String){return typeof r==="string"||typeof r==="undefined"||r===null?r:r.toString()}if(i===Object){return typeof r==="object"?r:a.defaultValue}if(e(i,t)){return i.isValid(r)?r:a.defaultValue}};const o=(t,e)=>{t&&a.getSlottedElements(t).forEach(t=>{if(!(t instanceof e.type)){throw new Error(`${t} is not of type ${e.type}`)}});return t};return s});