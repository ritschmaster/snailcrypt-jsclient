sap.ui.define(["sap/ui/webc/common/thirdparty/base/UI5Element","sap/ui/webc/common/thirdparty/base/renderer/LitRenderer","sap/ui/webc/common/thirdparty/base/i18nBundle","sap/ui/webc/common/thirdparty/base/locale/getLocale","sap/ui/webc/common/thirdparty/base/types/ValueState","sap/ui/webc/common/thirdparty/localization/features/calendar/Gregorian","sap/ui/webc/common/thirdparty/localization/DateFormat","sap/ui/webc/common/thirdparty/base/asset-registries/LocaleData","sap/ui/webc/common/thirdparty/base/Keys","sap/ui/webc/common/thirdparty/icons/time-entry-request","./Icon","./ResponsivePopover","./generated/templates/TimePickerTemplate.lit","./generated/templates/TimePickerPopoverTemplate.lit","./Input","./Button","./TimeSelection","./generated/i18n/i18n-defaults","./generated/themes/TimePicker.css","./generated/themes/TimePickerPopover.css","./generated/themes/ResponsivePopoverCommon.css"],function(e,t,i,a,s,r,n,u,o,l,c,p,h,d,m,g,f,v,y,_,P){"use strict";function V(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var b=V(e);var S=V(t);var w=V(a);var k=V(s);var B=V(n);const I={languageAware:true,managedSlots:true,properties:{value:{type:String,defaultValue:undefined},valueState:{type:k,defaultValue:k.None},disabled:{type:Boolean},readonly:{type:Boolean},_isPickerOpen:{type:Boolean,noAttribute:true}},slots:{valueStateMessage:{type:HTMLElement}},events:{change:{},input:{}}};class T extends b{static get metadata(){return I}static get render(){return S}static get styles(){return y}static get staticAreaTemplate(){return d}static get template(){return h}static get dependencies(){return[c,p,f,m,g]}static async onDefine(){[T.i18nBundle]=await Promise.all([i.getI18nBundle("@ui5/webcomponents"),u.fetchCldr(w().getLanguage(),w().getRegion(),w().getScript())])}static get staticAreaStyles(){return[P,_]}constructor(){super()}get _placeholder(){return undefined}get _formatPattern(){return undefined}get _effectiveValue(){return this.value}get _timeSelectionValue(){return this.tempValue}onTimeSelectionChange(e){this.tempValue=e.detail.value}submitPickers(){this._updateValueAndFireEvents(this.tempValue,true,["change","value-changed"]);this.closePicker()}onResponsivePopoverAfterClose(){this._isPickerOpen=false}async _handleInputClick(){if(this._isPickerOpen){return}const e=await this._getInputField();if(e){e.select()}}_updateValueAndFireEvents(e,t,i){if(e===this.value){return}const a=this.isValid(e);if(a&&t){e=this.normalizeValue(e)}if(!i.includes("input")){this.value="";this.value=e}this.tempValue=e;this._updateValueState();i.forEach(t=>{this.fireEvent(t,{value:e,valid:a})})}_updateValueState(){const e=this.isValid(this.value);if(!e){this.valueState=k.Error}else if(e&&this.valueState===k.Error){this.valueState=k.None}}async _handleInputChange(e){this._updateValueAndFireEvents(e.target.value,true,["change","value-changed"])}async _handleInputLiveChange(e){this._updateValueAndFireEvents(e.target.value,false,["input"])}async closePicker(){const e=await this._getPopover();e.close();this._isPickerOpen=false}async openPicker(){this.tempValue=this.value&&this.isValid(this.value)?this.value:this.getFormat().format(new Date);const e=await this._getPopover();e.showAt(this);this._isPickerOpen=true}togglePicker(){if(this.isOpen()){this.closePicker()}else if(this._canOpenPicker()){this.openPicker()}}isOpen(){return!!this._isPickerOpen}_canOpenPicker(){return!this.disabled&&!this.readonly}async _getPopover(){const e=await this.getStaticAreaItemDomRef();return e.querySelector("[ui5-responsive-popover]")}_getInput(){return this.shadowRoot.querySelector("[ui5-input]")}_getInputField(){const e=this._getInput();return e&&e.getInputDOMRef()}_onkeydown(e){if(o.isShow(e)){e.preventDefault();this.togglePicker()}if(this.isOpen()){return}if(o.isPageUpShiftCtrl(e)){e.preventDefault();this._modifyValueBy(1,"second")}else if(o.isPageUpShift(e)){e.preventDefault();this._modifyValueBy(1,"minute")}else if(o.isPageUp(e)){e.preventDefault();this._modifyValueBy(1,"hour")}else if(o.isPageDownShiftCtrl(e)){e.preventDefault();this._modifyValueBy(-1,"second")}else if(o.isPageDownShift(e)){e.preventDefault();this._modifyValueBy(-1,"minute")}else if(o.isPageDown(e)){e.preventDefault();this._modifyValueBy(-1,"hour")}}get _isPattern(){return this._formatPattern!=="medium"&&this._formatPattern!=="short"&&this._formatPattern!=="long"}getFormat(){let e;if(this._isPattern){e=B.getInstance({pattern:this._formatPattern})}else{e=B.getInstance({style:this._formatPattern})}return e}formatValue(e){return this.getFormat().format(e)}isValid(e){return e===""||this.getFormat().parse(e)}normalizeValue(e){if(e===""){return e}return this.getFormat().format(this.getFormat().parse(e))}_modifyValueBy(e,t){const i=this.getFormat().parse(this._effectiveValue);if(!i){return}if(t==="hour"){i.setHours(i.getHours()+e)}else if(t==="minute"){i.setMinutes(i.getMinutes()+e)}else if(t==="second"){i.setSeconds(i.getSeconds()+e)}const a=this.formatValue(i);this._updateValueAndFireEvents(a,true,["change","value-changed"])}_handleWheel(e){e.preventDefault()}get submitButtonLabel(){return T.i18nBundle.getText(v.TIMEPICKER_SUBMIT_BUTTON)}get cancelButtonLabel(){return T.i18nBundle.getText(v.TIMEPICKER_CANCEL_BUTTON)}get openIconName(){return"time-entry-request"}}return T});