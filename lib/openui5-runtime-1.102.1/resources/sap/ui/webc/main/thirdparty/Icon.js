sap.ui.define(["sap/ui/webc/common/thirdparty/base/UI5Element","sap/ui/webc/common/thirdparty/base/renderer/LitRenderer","sap/ui/webc/common/thirdparty/base/asset-registries/Icons","sap/ui/webc/common/thirdparty/base/util/createStyleInHead","sap/ui/webc/common/thirdparty/base/i18nBundle","sap/ui/webc/common/thirdparty/base/Keys","sap/ui/webc/common/thirdparty/base/isLegacyBrowser","./generated/templates/IconTemplate.lit","./generated/themes/Icon.css"],function(e,t,i,n,a,s,r,c,o){"use strict";function l(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var u=l(e);var d=l(t);var h=l(n);var f=l(r);const p="ICON_NOT_FOUND";const m="presentation";const b={tag:"ui5-icon",languageAware:true,themeAware:true,properties:{interactive:{type:Boolean},name:{type:String},accessibleName:{type:String},showTooltip:{type:Boolean},accessibleRole:{type:String},ariaHidden:{type:String},pathData:{type:String,noAttribute:true},accData:{type:Object,noAttribute:true},focused:{type:Boolean},invalid:{type:Boolean},effectiveAccessibleName:{type:String,defaultValue:undefined,noAttribute:true}},events:{click:{}}};class g extends u{static get metadata(){return b}static get render(){return d}static get template(){return c}static get styles(){return o}static async onDefine(){this.createGlobalStyle()}_onFocusInHandler(e){if(this.interactive){this.focused=true}}_onFocusOutHandler(e){this.focused=false}_onkeydown(e){if(!this.interactive){return}if(s.isEnter(e)){this.fireEvent("click")}if(s.isSpace(e)){e.preventDefault()}}_onkeyup(e){if(this.interactive&&s.isSpace(e)){this.fireEvent("click")}}_onClickHandler(e){e.stopPropagation();this.fireEvent("click")}get _dir(){return this.ltr?"ltr":undefined}get effectiveAriaHidden(){if(this.ariaHidden===""){if(this.isDecorative){return true}return}return this.ariaHidden}get tabIndex(){return this.interactive?"0":undefined}get isDecorative(){return this.effectiveAccessibleRole===m}get effectiveAccessibleRole(){if(this.accessibleRole){return this.accessibleRole}if(this.interactive){return"button"}return this.effectiveAccessibleName?"img":m}static createGlobalStyle(){if(f()){const e=document.head.querySelector(`style[data-ui5-icon-global]`);if(!e){h(`ui5-icon { display: none !important; }`,{"data-ui5-icon-global":""})}}}static removeGlobalStyle(){if(f()){const e=document.head.querySelector(`style[data-ui5-icon-global]`);if(e){document.head.removeChild(e)}}}async onBeforeRendering(){const e=this.name;if(!e){return console.warn("Icon name property is required",this)}let t=i.getIconDataSync(e);if(!t){t=await i.getIconData(e)}if(t===p){this.invalid=true;return console.warn(`Required icon is not registered. You can either import the icon as a module in order to use it e.g. "@ui5/webcomponents-icons/dist/${e.replace("sap-icon://","")}.js", or setup a JSON build step and import "@ui5/webcomponents-icons/dist/AllIcons.js".`)}if(!t){this.invalid=true;return console.warn(`Required icon is not registered. Invalid icon name: ${this.name}`)}this.invalid=false;this.pathData=t.pathData;this.accData=t.accData;this.ltr=t.ltr;this.packageName=t.packageName;this._onclick=this.interactive?this._onClickHandler.bind(this):undefined;this._onfocusout=this.interactive?this._onFocusOutHandler.bind(this):undefined;this._onfocusin=this.interactive?this._onFocusInHandler.bind(this):undefined;if(this.accessibleName){this.effectiveAccessibleName=this.accessibleName}else if(this.accData){const e=await a.getI18nBundle(this.packageName);this.effectiveAccessibleName=e.getText(this.accData)||undefined}}get hasIconTooltip(){return this.showTooltip&&this.effectiveAccessibleName}async onEnterDOM(){setTimeout(()=>{this.constructor.removeGlobalStyle()},0)}}g.define();return g});